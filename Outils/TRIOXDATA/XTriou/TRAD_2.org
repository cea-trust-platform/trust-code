comment objet_u # 0 Comments in a data file.
  attr comm chaine comm 0 Text to be commented.
bloc_comment objet_u /* 0 bloc of Comment in a data file.
  attr comm chaine comm 0 Text to be commented.
listobj listobj_impl listobj -1 List of objects.
objet_lecture objet_u objet_lecture -1 Auxiliary class for reading.
bloc_lecture objet_lecture nul 0 to read between two braces
  attr bloc_lecture chaine bloc_lecture 0 not_set
deuxmots objet_lecture nul 0 Two words.
  attr mot_1 chaine mot_1 0 First word.
  attr mot_2 chaine mot_2 0 Second word.
troismots objet_lecture nul 0 Three words.
  attr mot_1 chaine mot_1 0 First word.
  attr mot_2 chaine mot_2 0 Snd word.
  attr mot_3 chaine mot_3 0 Third word.
format_file objet_lecture nul 0 File formatted.
  attr format chaine(into=["binaire","formatte","xyz","single_hdf"]) format 1 Type of file (the file format).
  attr name_file chaine name_file 0 Name of file.
deuxentiers objet_lecture nul 0 Two integers.
  attr int1 entier int1 0 First integer.
  attr int2 entier int2 0 Second integer.
floatfloat objet_lecture nul 0 Two reals.
  attr a floattant a 0 First real.
  attr b floattant b 0 Second real.
entierfloat objet_lecture nul 0 An integer and a real.
  attr the_int entier the_int 0 Integer.
  attr the_float floattant the_float 0 Real.
stat_post_deriv objet_lecture stat_post_deriv 0 not_set
list_stat_post listobj nul -1 stat_post_deriv 0 Post-processing for statistics
listchamp_generique listobj nul 1 champ_generique_base 1 XXX
champ_post_de_champs_post champ_generique_base champ_post_de_champs_post -1 not_set
  attr source champ_generique_base source 1 the source field.
  attr nom_source chaine nom_source 1 To name a source field with the nom_source keyword
  attr source_reference chaine source_reference 1 not_set
  attr sources_reference list_nom_virgule sources_reference 1 not_set
  attr sources listchamp_generique sources 1 sources { Champ_Post.... { ... } Champ_Post.. { ... }}
champ_post_operateur_base champ_post_de_champs_post champ_post_operateur_base -1 not_set
champ_post_statistiques_base champ_post_de_champs_post champ_post_statistiques_base -1 not_set
  attr t_deb floattant t_deb 0 Start of integration time
  attr t_fin floattant t_fin 0 End of integration time
definition_champ objet_lecture nul 0 Keyword to create new complex field for advanced postprocessing.
  attr name chaine name 0 The name of the new created field.
  attr champ_generique champ_generique_base champ_generique 0 not_set
definition_champs listobj nul 1 definition_champ 0 List of definition champ
corps_postraitement postraitement nul -1 not_set
un_postraitement objet_lecture nul 0 An object of post-processing (with name).
  attr nom chaine nom 0 Name of the post-processing.
  attr post corps_postraitement post 0 Definition of the post-processing.
type_un_post objet_lecture nul 0 not_set
  attr type chaine(into=["postraitement","post_processing"]) type 0 not_set
  attr post un_postraitement post 0 not_set
type_postraitement_ft_lata objet_lecture nul 0 not_set
  attr type chaine(into=["postraitement_ft_lata","postraitement_lata"]) type 0 not_set
  attr nom chaine nom 0 Name of the post-processing.
  attr bloc chaine bloc 0 not_set
un_postraitement_spec objet_lecture nul 0 An object of post-processing (with type +name).
  attr type_un_post type_un_post type_un_post 1 not_set
  attr type_postraitement_ft_lata type_postraitement_ft_lata type_postraitement_ft_lata 1 not_set
liste_post listobj liste_post -1 un_postraitement_spec 0 Keyword to use several results files. List of objects of post-processing (with name)
nom_postraitement objet_lecture nul 0 not_set
  attr nom chaine nom 0 Name of the post-processing.
  attr post postraitement_base post 0 the post
liste_post_ok listobj liste_post_ok -1 nom_postraitement 0 Keyword to use several results files. List of objects of post-processing (with name)
pb_gen_base objet_u pb_gen_base -1 Basic class for problems.
condinit objet_lecture nul 0 Initial condition.
  attr nom chaine nom 0 Name of initial condition field.
  attr ch field_base ch 0 Type field and the initial values.
condinits listobj condinits -1 condinit 0 Initial conditions.
nom_anonyme nom nul -1 not_set
vect_nom listobj vect_nom 0 nom_anonyme 0 Vect of name.
list_nom listobj list_nom 1 nom_anonyme 0 List of name.
list_nom_virgule listobj list_nom_virgule 1 nom_anonyme 1 List of name.
mailler_base objet_lecture mailler_base -1 Basic class to mesh.
defbord objet_lecture nul 0 Class to define an edge.
defbord_2 defbord nul -1 1-D edge (straight line) in the 2-D space.
  attr dir chaine(into=["X","Y"]) dir 0 Edge is perpendicular to this direction.
  attr eq chaine(into=["="]) eq 0 Equality sign.
  attr pos floattant pos 0 Position value.
  attr pos2_min floattant pos2_min 0 Minimal value.
  attr inf1 chaine(into=["<="]) inf1 0 Less than or equal to sign.
  attr dir2 chaine(into=["X","Y"]) dir2 0 Edge is parallel to this direction.
  attr inf2 chaine(into=["<="]) inf2 0 Less than or equal to sign.
  attr pos2_max floattant pos2_max 0 Maximal value.
defbord_3 defbord nul -1 2-D edge (plane) in the 3-D space.
  attr dir chaine(into=["X","Y","Z"]) dir 0 Edge is perpendicular to this direction.
  attr eq chaine(into=["="]) eq 0 Equality sign.
  attr pos floattant pos 0 Position value.
  attr pos2_min floattant pos2_min 0 Minimal value.
  attr inf1 chaine(into=["<="]) inf1 0 Less than or equal to sign.
  attr dir2 chaine(into=["X","Y"]) dir2 0 Edge is parallel to this direction.
  attr inf2 chaine(into=["<="]) inf2 0 Less than or equal to sign.
  attr pos2_max floattant pos2_max 0 Maximal value.
  attr pos3_min floattant pos3_min 0 Minimal value.
  attr inf3 chaine(into=["<="]) inf3 0 Less than or equal to sign.
  attr dir3 chaine(into=["Y","Z"]) dir3 0 Edge is parallel to this direction.
  attr inf4 chaine(into=["<="]) inf4 0 Less than or equal to sign.
  attr pos3_max floattant pos3_max 0 Maximal value.
internes bord_base internes 0 To indicate that the block has a set of internal faces (these faces will be duplicated automatically by the program and will be processed in a manner similar to edge faces). NL2 Two boundaries with the same boundary conditions may have the same name (whether or not they belong to the same block). NL2 The keyword Internes (Internal) must be used to execute a calculation with plates, followed by the equation of the surface area covered by the plates.
  attr nom chaine nom 0 Name of block side.
  attr defbord defbord defbord 0 Definition of block side.
epsilon mailler_base epsilon 0 Two points will be confused if the distance between them is less than eps. By default, eps is set to 1e-12. The keyword Epsilon allows an alternative value to be assigned to eps.
  attr eps floattant eps 0 New value of precision.
domain mailler_base domain 0 Class to reuse a domain.
  attr domain_name ref_domaine domain_name 0 Name of domain.
list_bloc_mailler listobj list_bloc_mailler 1 mailler_base 1 List of block mesh.
write_file interprete ecrire_fichier -1 Keyword to write the object of name name_obj to a file filename. Since the v1.6.3, the default format is now binary format file.
  attr name_obj chaine name_obj 0 Name of the object to be written.
  attr filename chaine filename 0 Name of the file.
write interprete ecrire -1 Keyword to write the object of name name_obj to a standard outlet.
  attr name_obj chaine name_obj 0 Name of the object to be written.
fin interprete fin -1 Keyword which must complete the data file. The execution of the data file stops when reaching this keyword.
class_generic objet_u class_generic -1 not_set
dt_start class_generic dt_start 0 not_set
dt_calc_dt_calc dt_start dt_calc 0 The time step at first iteration is calculated in agreement with CFL condition.
dt_calc_dt_min dt_start dt_min 0 The first iteration is based on dt_min.
dt_calc_dt_fixe dt_start dt_fixe 0 The first time step is fixed by the user (recommended when resuming calculation with Crank Nicholson temporal scheme to ensure continuity).
  attr value floattant value 0 first time step.
euler_scheme schema_temps_base schema_euler_explicite -1 This is the Euler explicit scheme.
solveur_sys_base class_generic solveur_sys_base -1 Basic class to solve the linear system.
un_pb objet_lecture nul 0 pour les groupes
  attr mot ref_Pb_base mot 0 the string
list_un_pb listobj nul 1 un_pb 1 pour les groupes
list_list_nom listobj nul 1 list_un_pb 1 pour les groupes
raffiner_isotrope interprete raffiner_isotrope -1 For VDF and VEF discretizations, allows to cut triangles/quadrangles or tetrahedral/hexaedras elements respectively in 4 or 8 new ones by defining new summits located at the middle of edges (and center of faces and elements for quadrangles and hexaedra). Such a cut preserves the shape of original elements (isotropic). For 2D elements: \includetabfig{{raffinerisotri.pdf}}{{4}}{{raffinerisorect.pdf}}{{4}} For 3D elements: \includetabfig{{raffinerisotetra.jpeg}}{{6}}{{raffinerisohexa.jpeg}}{{5}}.
  attr domain_name ref_domaine domain_name 0 Name of domain.
triangulate interprete trianguler -1 To achieve a triangular mesh from a mesh comprising rectangles (2 triangles per rectangle). Should be used in VEF discretization. Principle: NL2 \includepng{{trianguler.pdf}}{{10}}
  attr domain_name ref_domaine domain_name 0 Name of domain.
bloc_lecture_poro objet_lecture nul 1 Surface and volume porosity values.
  attr volumique floattant volumique 0 Volume porosity value.
  attr surfacique list surfacique 0 Surface porosity values (in X, Y, Z directions).
bloc_lec_champ_init_canal_sinal objet_lecture nul 1 Parameters for the class champ_init_canal_sinal. NL2 in 2D: NL2 U=ucent*y(2h-y)/h/h NL2 V=ampli_bruit*rand+ampli_sin*sin(omega*x) NL2 rand: unpredictable value between -1 and 1. NL2 in 3D: NL2 U=ucent*y(2h-y)/h/h NL2 V=ampli_bruit*rand1+ampli_sin*sin(omega*x) NL2 W=ampli_bruit*rand2 NL2 rand1 and rand2: unpredictables values between -1 and 1.
  attr ucent floattant ucent 0 Velocity value at the center of the channel.
  attr h floattant h 0 Half hength of the channel.
  attr ampli_bruit floattant ampli_bruit 0 Amplitude for the disturbance.
  attr ampli_sin floattant ampli_sin 1 Amplitude for the sinusoidal disturbance (by default equals to ucent/10).
  attr omega floattant omega 0 Value of pulsation for the of the sinusoidal disturbance.
  attr dir_flow entier(into=[0,1,2]) dir_flow 1 Flow direction for the initialization of the flow in a channel. NL2 - if dir_flow=0, the flow direction is X NL2 - if dir_flow=1, the flow direction is Y NL2 - if dir_flow=2, the flow direction is Z NL2 Default value for dir_flow is 0
  attr dir_wall entier(into=[0,1,2]) dir_wall 1 Wall direction for the initialization of the flow in a channel. NL2 - if dir_wall=0, the normal to the wall is in X direction NL2 - if dir_wall=1, the normal to the wall is in Y direction NL2 - if dir_wall=2, the normal to the wall is in Z direction NL2 Default value for dir_flow is 1
  attr min_dir_flow floattant min_dir_flow 1 Value of the minimum coordinate in the flow direction for the initialization of the flow in a channel. Default value for dir_flow is 0.
  attr min_dir_wall floattant min_dir_wall 1 Value of the minimum coordinate in the wall direction for the initialization of the flow in a channel. Default value for dir_flow is 0.
acceleration source_base acceleration 1 Momentum source term to take in account the forces due to rotation or translation of a non Galilean referential R\' (centre 0\') into the Galilean referential R (centre 0).
  attr vitesse field_base vitesse 1 Keyword for the velocity of the referential R\' into the R referential (dOO\'/dt term [m.s-1]). The velocity is mandatory when you want to print the total cinetic energy into the non-mobile Galilean referential R (see Ec_dans_repere_fixe keyword).
  attr acceleration field_base acceleration 1 Keyword for the acceleration of the referential R\' into the R referential (d2OO\'/dt2 term [m.s-2]). field_base is a time dependant field (eg: Champ_Fonc_t).
  attr omega field_base omega 1 Keyword for a rotation of the referential R\' into the R referential [rad.s-1]. field_base is a 3D time dependant field specified for example by a Champ_Fonc_t keyword. The time_field field should have 3 components even in 2D (In 2D: 0 0 omega).
  attr domegadt field_base domegadt 1 Keyword to define the time derivative of the previous rotation [rad.s-2]. Should be zero if the rotation is constant. The time_field field should have 3 components even in 2D (In 2D: 0 0 domegadt).
  attr centre_rotation field_base centre_rotation 1 Keyword to specify the centre of rotation (expressed in R\' coordinates) of R\' into R (if the domain rotates with the R\' referential, the centre of rotation is 0\'=(0,0,0)). The time_field should have 2 or 3 components according the dimension 2 or 3.
  attr option chaine(into=["terme_complet","coriolis_seul","entrainement_seul"]) option 1 Keyword to specify the kind of calculation: terme_complet (default option) will calculate both the Coriolis and centrifugal forces, coriolis_seul will calculate the first one only, entrainement_seul will calculate the second one only.
coriolis source_base coriolis 0 Keyword for a Coriolis term in hydraulic equation. Warning: Only available in VDF.
  attr omega chaine omega 0 Value of omega.
fonction_champ_reprise objet_lecture nul 0 not_set
  attr mot chaine(into=["fonction"]) mot 0 not_set
  attr fonction listchaine fonction 0 n f1(val) f2(val) ... fn(val)] time
source_qdm source_base source_qdm 0 Momentum source term in the Navier-Stokes equations.
  attr ch field_base champ 0 Field type.
perte_charge_singuliere source_base perte_charge_singuliere 1 Source term that is used to model a pressure loss over a surface area (transition through a grid, sudden enlargement) defined by the faces of elements located on the intersection of a subzone named subzone_name and a X,Y, or Z plane located at X,Y or Z = location.
  attr dir chaine(into=["kx","ky","kz","K"]) dir 0 KX, KY or KZ designate directional pressure loss coefficients for respectively X, Y or Z direction. Or in the case where you chose a target flow rate with regul. Use K for isotropic pressure loss coefficient
  attr coeff floattant coeff 1 Value (float) of friction coefficient (KX, KY, KZ).
  attr regul bloc_lecture regul 1 option to have adjustable K with flowrate target  NL2 { K0 valeur_initiale_de_k deb debit_cible eps intervalle_variation_mutiplicatif}.
  attr surface bloc_lecture surface 0 Three syntaxes are possible for the surface definition block: NL2 For VDF and VEF: { X|Y|Z = location subzone_name } NL2 Only for VEF: { Surface surface_name }. NL2 For polymac { Surface surface_name Orientation champ_uniforme }
perte_charge_directionnelle source_base perte_charge_directionnelle 1 Directional pressure loss.
  attr lambda chaine lambda_u 0 Function for loss coefficient which may be Reynolds dependant (Ex: 64/Re).
  attr diam_hydr champ_don_base diam_hydr 0 Hydraulic diameter value.
  attr direction champ_don_base direction 0 Field which indicates the direction of the pressure loss.
  attr sous_zone chaine sous_zone 1 Optional sub-area where pressure loss applies.
perte_charge_isotrope source_base perte_charge_isotrope 1 Isotropic pressure loss.
  attr lambda chaine lambda_u 0 Function for loss coefficient which may be Reynolds dependant (Ex: 64/Re).
  attr diam_hydr champ_don_base diam_hydr 0 Hydraulic diameter value.
  attr sous_zone chaine sous_zone 1 Optional sub-area where pressure loss applies.
perte_charge_anisotrope source_base perte_charge_anisotrope 1 Anisotropic pressure loss.
  attr lambda chaine lambda_u 0 Function for loss coefficient which may be Reynolds dependant (Ex: 64/Re).
  attr lambda_ortho chaine lambda_ortho 0 Function for loss coefficient in transverse direction which may be Reynolds dependant (Ex: 64/Re).
  attr diam_hydr champ_don_base diam_hydr 0 Hydraulic diameter value.
  attr direction champ_don_base direction 0 Field which indicates the direction of the pressure loss.
  attr sous_zone chaine sous_zone 1 Optional sub-area where pressure loss applies.
perte_charge_circulaire source_base perte_charge_circulaire 1 New pressure loss.
  attr lambda chaine lambda_u 0 Function f(Re_tot, Re_long, t, x, y, z) for loss coefficient in the longitudinal direction
  attr lambda_ortho chaine lambda_ortho 0 function: Function f(Re_tot, Re_ortho, t, x, y, z) for loss coefficient in transverse direction
  attr diam_hydr champ_don_base diam_hydr 0 Hydraulic diameter value.
  attr diam_hydr_ortho champ_don_base diam_hydr_ortho 0 Transverse hydraulic diameter value.
  attr direction champ_don_base direction 0 Field which indicates the direction of the pressure loss.
  attr sous_zone chaine sous_zone 1 Optional sub-area where pressure loss applies.
darcy source_base darcy 0 Class for calculation in a porous media with source term of Darcy -nu/K*V. This keyword must be used with a permeability model. For the moment there are two models : permeability constant or Ergun\'s law. Darcy source term is available for quasi compressible calculation. A new keyword is aded for porosity (porosite).
  attr bloc bloc_lecture bloc 0 Description.
forchheimer source_base forchheimer 0 Class to add the source term of Forchheimer -Cf/sqrt(K)*V2 in the Navier-Stokes equations. We must precise a permeability model : constant or Ergun\'s law. Moreover we can give the constant Cf : by default its value is 1. Forchheimer source term is available also for quasi compressible calculation. A new keyword is aded for porosity (porosite).
  attr bloc bloc_lecture bloc 0 Description.
debut_bloc interprete { 0 Block\'s beginning.
fin_bloc interprete } 0 Block\'s end.
export interprete export 0 Class to make the object have a global range, if not its range will apply to the block only (the associated object will be destroyed on exiting the block).
champ_input_base field_base champ_input_base 1 not_set
  attr nb_comp entier nb_comp 0 not_set
  attr nom chaine nom 0 not_set
  attr initial_value list initial_value 1 not_set
  attr probleme chaine probleme 0 not_set
  attr sous_zone ref_sous_zone sous_zone 1 not_set
listdeuxmots_sacc listobj nul 0 deuxmots 0 List of groups of two words (without curly brackets).
partitionneur_deriv objet_u partitionneur_deriv -1 not_set
  attr nb_parts entier nb_parts 1 The number of non empty parts that must be generated (generally equal to the number of processors in the parallel run).
partitionneur_sous_zones partitionneur_deriv sous_zones -1 This algorithm will create one part for each specified subzone. All elements contained in the first subzone are put in the first part, all remaining elements contained in the second subzone in the second part, etc... NL2 If all elements of the domain are contained in the specified subzones, then N parts are created, otherwise, a supplemental part is created with the remaining elements. NL2 If no subzone is specified, all subzones defined in the domain are used to split the mesh.
  attr sous_zones listchaine sous_zones 0 N SUBZONE_NAME_1 SUBZONE_NAME_2 ...
troisf objet_lecture nul 0 Auxiliary class to extrude.
  attr lx floattant lx 0 X direction of the extrude operation.
  attr ly floattant ly 0 Y direction of the extrude operation.
  attr lz floattant lz 0 Z direction of the extrude operation.
spec_pdcr_base objet_lecture spec_pdcr_base 0 Class to read the source term modelling the presence of a bundle of tubes in a flow. Cf=A Re-B.
  attr ch_a chaine(into=["a","cf"]) ch_a 0 Keyword to be used to set law coefficient values for the coefficient of regular pressure losses.
  attr a floattant a 0 Value of a law coefficient for regular pressure losses.
  attr ch_b chaine(into=["b"]) ch_b 1 Keyword to be used to set law coefficient values for regular pressure losses.
  attr b floattant b 1 Value of a law coefficient for regular pressure losses.
longitudinale spec_pdcr_base longitudinale 0 Class to define the pressure loss in the direction of the tube bundle.
  attr dir chaine(into=["x","y","z"]) dir 0 Direction.
  attr dd floattant dd 0 Tube bundle hydraulic diameter value. This value is expressed in m.
transversale spec_pdcr_base transversale 0 Class to define the pressure loss in the direction perpendicular to the tube bundle.
  attr dir chaine(into=["x","y","z"]) dir 0 Direction.
  attr dd floattant dd 0 Value of the tube bundle step.
  attr chaine_d chaine(into=["d"]) chaine_d 0 Keyword to be used to set the value of the tube external diameter.
  attr d floattant d 0 Value of the tube external diameter.
