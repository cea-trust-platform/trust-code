#!/bin/bash
# On n'installe que pour Linux
#./Installer.old $* 
#exit
#[ $TRUST_ARCH != "linux" ] && exit
if [ $1 = "TRIOU" ]; then
  . ./XDATA.sh
fi
rm -rf $1/dist $1/build
#tar zxf $1.tgz
chmod -R +w $1
mkdir -p TRIOU/TRIOU_SRC/src
rsync -v --archive TRIOU/TRIOU_SRC/src_base/* TRIOU/TRIOU_SRC/src

if [ $1 = "TRIOU" ]; then
   cp -f XTriou/triou.py  XTriou/menu/menu_*.py TRIOU/TRIOU_SRC/src/.
else
  if [ $1 = "XDATA" ]; then
      mkdir -p XDATA
      cd XDATA
      tar zxvf $TRUST_ROOT/externalpackages/SALOME/xdata-9.6.0.tar.gz
      mv xdata-9.6.0  XDATA_SRC
      tar zxvf $TRUST_ROOT/externalpackages/SALOME/configuration-9.14.0.tar.gz
      mv configuration-9.14.0  CONFIGURATION_SRC

      cd XDATA_SRC
      ## Patching
      echo Patching XDATA ...
      patch -p1 < ../../xdata_python.patch || exit -1
      cd ../..
     [ "$2" = "" ] && ( cd XTriou; make clean)   
 fi
fi
CXX=$TRUST_CC
CC=$TRUST_cc
FC=$TRUST_F77_BASE
if [ "$TRUST_CC_BASE_EXTP" != "" ]
then
   export OMPI_CXX=$TRUST_CC_BASE_EXTP
   export OMPI_CC=$TRUST_cc_BASE_EXTP
   export OMPI_FC=$TRUST_F77_BASE_EXTP
   export MPICH_CXX=$OMPI_CXX
   export MPICH_CC=$OMPI_CC
   export MPICH_FC=$OMPI_FC
fi

cd $1/$1_SRC
#./build_configure
cd ..
mkdir build
cd build
#../$1_SRC/configure --prefix=`pwd`/../dist
cmake ../$1_SRC -DCMAKE_INSTALL_PREFIX=`pwd`/../dist -DCMAKE_BUILD_TYPE=Release -DCONFIGURATION_ROOT_DIR=../CONFIGURATION_SRC -DSALOME_XDATA_WITH_COMPONENT=OFF -DCMAKE_CXX_COMPILER=$CXX

make install || exit -1
cd ../..
touch $1
version=`python -c "from sys import version;print('python'+'.'.join(version.split('.')[0:2]))"`
if [ $1 = "XDATA" ]; then
   echo export PYTHONPATH=`pwd`/$1/dist/lib/$version/site-packages/xdata/:\${PYTHONPATH} > XDATA.sh
   echo export PATH=\${PATH}:`pwd`/$1/dist/bin >> XDATA.sh
   if [ "$KERNEL_ROOT_DIR" != "" ]
   then
   echo "export KERNEL_ROOT_DIR=$KERNEL_ROOT_DIR" >> XDATA.sh
   fi
   (cd XDATA; rm -rf build XDATA_SRC CONFIGURATION_SRC)
else
   fileout=IHMTRIO.sh
    [ $1 != "TRIOU" ] && fileout=IHM_$1.sh
       
   echo . `pwd`/XDATA.sh > ${fileout}
   echo export TRIOU_ROOT_DIR=`pwd`/TRIOU/dist >>${fileout}
   echo export PYTHONPATH=`pwd`/$1/dist/lib/$version/site-packages/salome/:\${PYTHONPATH} >> ${fileout}
   echo export PATH=\${PATH}:`pwd`>> ${fileout}
   chmod +x ${fileout}
   (cd TRIOU ; rm -rf build ) # TRIOU_SRC
fi
chmod -R +w $1
