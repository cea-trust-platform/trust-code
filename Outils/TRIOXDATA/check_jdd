#!/bin/bash
cd `dirname $0`
. ./XDATA.sh
cd XTriou
echo "Debut de la traduction ..."
make test_ref_trace >/dev/null 2>&1
trad=$?
if [ $trad -ne 0 ] 
then
   echo " cas rate a la traduction"
   #cat tests/cas_rate
   trad=0
   for cas in `cat tests/cas_rate`
   do
      trad=1
      echo "-------------------------------"
      echo $cas":"
      VerifData `find . -name $cas.data` 2>&1 | grep "Exception:"
   done
   if [ $trad -eq 0 ]
   then
      echo "   aucun "
   fi
else
   echo "traduction terminee"
fi

cd ..
echo "Creation lance_test modifie ..."
[ "$1" = "-no_lance_test" ] && exit $trad
cd test_complet
./fait_lance_test
echo "Creation lance_test modifie ... OK"
echo "Execution des cas tests ... you can monitor test_complet/lance_out to follow progression ..."
export PAR_F=0
# Generate list of tests:
find $TRUST_TESTS -name '*.lml.gz' -follow -exec basename {} .lml.gz \; | grep -v "^Align_Multiple_CF_Beams_" | grep -v "^Sonde$" > liste_cas_xdata
# See bttriocfd #228029 for skipped Align_Multiple_CF_Beams_ tests
echo liste_cas_xdata | ./lance_test_modif -nomail $exec `pwd` 1>lance_out 2>&1
lanc=$?
name=`basename $exec`
#cat .tests_${name}
if [ -s tests_${name}/liste ] 
then
	# on va tester les cas a pb (reel)
	mkdir -p ref
	cp tests_${name}/liste .
        echo liste | lance_test $exec `pwd`/ref 1>lance_out_ref 2>&1
	sed "s/'/ /g"  ref/tests_${name}/liste >  ref/tests_${name}/liste_c
	mv ref/tests_${name}/liste_c ref/tests_${name}/liste
	if [ "`diff tests_${name}/liste ref/tests_${name}/liste`" != "" ]
	then
	  echo 
	  echo " cas rate a l'execution" 
	  cat tests_${name}/liste
	  echo 
	  echo "cas tests a pb en standard "
	  cat ref/tests_${name}/liste
	  echo 
	  echo "difference "
	  diff tests_${name}/liste ref/tests_${name}/liste
	  echo
	  grep -v CHANNEL_LES_VEF_RE_TAU_1110_jdd tests_${name}/liste | grep -v Execute_parallel | grep -v  OBI_diffuser_VEF_k_eps_jdd1  >liste_mod
	  
	  if [ "`diff liste_mod ref/tests_${name}/liste`" != "" ]
	      then
	      echo "difference bloquante"
	      diff liste_mod ref/tests_${name}/liste
	      echo
	      echo "Validation XDATA=KO" 
	      exit -1
	  else
	      echo on accepte ces differences
	  fi
        fi 
	rm -rf ref
fi
([ $trad -ne 0 ] || [ $lanc -ne 0 ]) && echo "Validation XDATA=KO" && exit -1
echo "Validation XDATA=OK" && exit 0
