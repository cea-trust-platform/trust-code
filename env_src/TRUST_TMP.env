#!/bin/bash
############################
# Definition de TRUST_TMP #
############################

#################################################
# On fixe HOST dynamiquement en ne prenant plus #
# celui de la machine ou TRUST est installe    #
#################################################
if [ "$TRUST_ROOT" != "" ]
then
   . $TRUST_ROOT/env/HOST.env
elif [ -f HOST.env ]
then
   . ./HOST.env
else
   echo "HOST.env file not found in TRUST_TMP.env"
   exit -1
fi

# On recherche TRUST_TMP
#TRUST_TMP=$HOME && [ "`env | grep SUDO_`" != "" ] && TRUST_TMP=/tmp && export HOME=/tmp
login=`basename $HOME`
TRUST_TMPS=""
[ "$(uname -a | grep CYGWIN)" != "" ] && TRUST_TMPS=$TRUST_TMPS" $HOME/tmp" # cygwin 
#TRUST_TMPS=$TRUST_TMPS" $CCCWORKDIR/.tmp_TRUST" # Temporaire sur topaze CCCSCRATCHDIR plein tres vite...
[ "`whoami`" = triou ] && TRUST_TMPS=$TRUST_TMPS" /ccc/scratch/cont002/triocfd/triou" 		# Cas CCRT/TGCC irene
TRUST_TMPS=$TRUST_TMPS" $CCCSCRATCHDIR" 		# Cas CCRT/TGCC
TRUST_TMPS=$TRUST_TMPS" $SCRATCHDIR" 			# Cas CINES
TRUST_TMPS=$TRUST_TMPS" $SCRATCH" 			# Cas Jean-Zay et Adastra (variable exportee)
TRUST_TMPS=$TRUST_TMPS" $WORKDIR" 			# Cas triou
TRUST_TMPS=$TRUST_TMPS" /work/$login" 			# Cas Grenoble
TRUST_TMPS=$TRUST_TMPS" /export/home/catA/$login" 	# Cas Saclay titania
TRUST_TMPS=$TRUST_TMPS" /export/home/catB/$login" 	# Cas Saclay titania
TRUST_TMPS=$TRUST_TMPS" /export/home/catC/$login" 	# Cas Saclay titania
TRUST_TMPS=$TRUST_TMPS" /volatile/catA/$login" 		# Cas Saclay (machines Titania)
TRUST_TMPS=$TRUST_TMPS" /volatile/catB/$login" 		# Cas Saclay (machines Titania)
TRUST_TMPS=$TRUST_TMPS" /volatile/catC/$login" 		# Cas Saclay (machines Titania)
TRUST_TMPS=$TRUST_TMPS" /scratch/$login"                # Cas Marcoule (ceres2)
TRUST_TMPS=$TRUST_TMPS" /nobackup/$login"               # Cas Grenoble (aar)
TRUST_TMPS=$TRUST_TMPS" /mnt/scratch"                   # Cas zone
TRUST_TMPS=$TRUST_TMPS" /tmp"                           # Cas general ou sudo (on ne peut ecrire sur $HOME)
TRUST_TMPS=$TRUST_TMPS" /home/$login/tmp-global"        # Cas Cadarache (mezel)
TRUST_TMPS=$TRUST_TMPS" $HOME"				# Cas classique

rep=`dirname $TRUST_ROOT`
rep=`basename $rep`
TRUST_TMP_OK=0
for TRUST_TMP in $TRUST_TMPS
do
   TRUST_TMP=$TRUST_TMP/.tmp_TRUST
   # On rajoute le nom de la machine
   if [ -d $TRUST_ROOT/.git ]  #&& [ $HOST = $TRUST_HOST_ADMIN ]
   then
      TRUST_TMP=$TRUST_TMP"_"$rep
   else
      TRUST_TMP=$TRUST_TMP"_"$HOST_BUILD
   fi
   # Si on est sur /tmp, on ajoute le login:
   [ ${TRUST_TMP#/tmp} != $TRUST_TMP ] && TRUST_TMP=$TRUST_TMP"_"`whoami`

   # On teste la creation et que l'on a bien les droits d'execution (parfois interdit pour des raisons de securite sous /tmp)
   exe=$TRUST_TMP/run
   mkdir -p $TRUST_TMP 2>/dev/null && touch $exe 2>/dev/null && chmod +x $exe && $exe 2>/dev/null && rm -f $exe && export TRUST_TMP && TRUST_TMP_OK=1 && break
done
#
[ $TRUST_TMP = 0 ] && echo "Can't find a location for TRUST_TMP ! Contact TRUST support." && exit -1
# Cas SUDO trouve ou $HOME ne peut etre utilise
if [ "$SUDO_ID" != "" ] || [ "$SUDO_UID" != "" ] 
then
   touch $HOME/. 2>/dev/null
   error=$?
   [ $error != 0 ] && export HOME=$TRUST_TMP && echo "export HOME=$HOME"
fi

# TMPDIR mieux fixe pour nvc++ ou OpenMPI livre:
if [ "$TRUST_ARCH_CC" = linux_nvc++ ] || [ "$MPI_ROOT" = $TRUST_ROOT/lib/src/LIBMPI/openmpi ]
then
   export TMPDIR=$TRUST_TMP
fi
