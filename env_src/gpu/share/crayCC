#!/bin/bash
flags=$@

# Grab source file cpp:
cpp=`echo $@ | grep ".cpp " | awk -F".cpp " '{print $1}' | awk '{print $NF".cpp"}'`
if [ "$cpp" != "" ]
then
  omp_file="`grep "#pragma omp target" $cpp`"
  hip_file="`grep "Kokkos::parallel"   $cpp`"
  bug="" && [ "`basename $TRUST_CC_BASE`" != amdclang++ ] && [ "`grep "Kokkos::parallel"   $cpp`" != "" ] && bug="-O1" # amdclang++ fail in debug mode with parallel_reduce ! Debugger avec rocgdb pas gdb
  [ "$omp_file" != "" ] && [ "$hip_file" != "" ] && echo "Warning, mix HIP and OMPT inside $cpp. OMPT will not be used !" #&& exit -1
else
  # On linke normalement sans HIP:   
  cpp="linking"
  FORCE_HIP=0
  omp_file="linking"
  hip_file=""
fi
# Choix des options selon source (OMPT ou Kokkos/HIP):
if [ "$omp_file" != "" ] && [ "$hip_file" = "" ]
then
   # Source OpenMP
   echo "OMPT for $cpp"
   flags="-DNO_HIP "$flags
else
   # Source HIP (from KOKKOS)
   echo "HIP for $cpp"
   # Remove OpenMP flags:
   for flag in -fopenmp-targets=amdgcn-amd-amdhsa -Xopenmp-target=amdgcn-amd-amdhsa -march=$ROCM_ARCH -fopenmp
   do
      flags=`echo $flags | sed "1,$ s?$flag??g"`
   done
   # Use HIP flags: RISQUE du dernier FLAG -Wno-gpu-maybe-wrong-side !!!!
   flags="$bug -xhip --offload-arch=$ROCM_ARCH -Wno-hip-omp-target-directives -Wno-gpu-maybe-wrong-side "$flags
fi

