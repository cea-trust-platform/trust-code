#!/bin/bash
test_pere()
{
   baltik_build_configure -execute
   make optim
   (
     source env_Verifie_pere.sh && trust nul;
     exit $?
   )
   status=$?
}
gen_dico()
{
   $TRUST_Awk 'BEGIN {printf("{ ");}{if ($2!=$1) {printf(" %s ,",$2);}} END {print("fin")}' $TRUST_ROOT/doc/.dico | sed "s/,fin/}/" > dico
   $TRUST_Awk 'BEGIN {printf("{ ");}{if ($2!=$1) {printf(" %s ,",$1);}} END {print("fin")}' $TRUST_ROOT/doc/.dico | sed "s/,fin/}/" >> dico
   sed "s?|[^ ]* ? ?g"  dico > dico2; mv dico2 dico
}

[ $TRUST_ARCH != linux ] && echo "This script only runs on Linux..." && exit -1

# Creation d'un atelier avec des sources speciales
cd $TRUST_TMP
rm -r -f Verifie_pere
tar xfz $TRUST_ROOT/bin/KSH/Verifie_pere.tgz
cd Verifie_pere

echo End > nul.data
echo > LOG
gen_dico >>LOG 2>&1

# on verifie que les erreurs sont detectees
echo "We deliberately put a fake father in the Transformer class Champ_P0_VDF " >>LOG
sed 's?"Champ_P0_VDF",Champ_Inc_P0_base?"Champ_P0_VDF",Champ_Inc_base?'  $TRUST_ROOT/src/VDF/Champs/Champ_P0_VDF.cpp > src/Champ_P0_VDF.cpp
test_pere >>LOG 2>&1
echo "The error before is voluntary " >> LOG
erreur=$status

# version std
rm -f src/Champ_P0_VDF.cpp

# Pierre si je ne fais pas cela , des fois il ne recompile pas l'atelier
#
# Je ne veux pas faire rm $exec comme cela si ca ne compile pas on aura comme avant
sleep 1

test_pere >>LOG 2>&1
ok=$status

if [ $erreur -eq 0 ]
then
   echo "The test doesn't run anymore " | tee -a LOG
   ok=-13
fi
#on teste maintenant les bases... en regardant les sources
ana_base()
{
    f=$1
    mode=$2
    h=`echo $f | sed "s/\.cpp/.h/"`
    [ `basename $f` = "MD_Vector.cpp" ] && h=`echo $h| sed "s/Vector/Vector_base/"`
    res=`grep Implemente_base $f | awk -F\( '{print $2}' |sed "s?);?,?;s/ //g"`
    class=`echo $res | awk -F, '{print $1 }'`
    pere=`echo $res | awk -F, '{print $3 }'`

    res2=`grep public $h | grep $class| sed "s/,/ /g"`
    echo $res2 | awk -v pere=$pere 'BEGIN {ok=0}{ for (i=1;i<=NF;i++) { if ($i==pere){ ok=1}}}  END {print ok}'
    [ $mode -eq 1 ] && echo "classe " $class, "pere: " $pere&& echo dans $d/$h $res2

}

for d in `cd $TRUST_ROOT; find src -type d`
do

  files=`grep -l Implemente_base $TRUST_ROOT/$d/*.cpp 2>/dev/null`
  for f in $files
  do
    if [ "`grep _base_32_64 $f 2>/dev/null`" = "" ]
    then
      okl=`ana_base $f 0`
    else
      okl=1
    fi
    if [ $okl -ne 1 ]
    then
       ok=-100
       echo problem with $f >>LOG
       ana_base $f 1  >>LOG
    fi
  done
done


if [ $ok -ne 0 ]
then
   echo "  KO: Problem with a father; See the `pwd`/LOG file" | tee -a LOG
else
   echo "  OK"
fi
exit $ok



