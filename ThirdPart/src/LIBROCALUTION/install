#!/bin/bash
# rocALUTION : See https://github.com/ROCmSoftwarePlatform/rocALUTION

echo $TRUST_ROCALUTION
[ "$TRUST_ROCALUTION" = "" ] && exit

rm -r -f rocALUTION

#TRUST_ROCALUTION_COMMIT=develop 
if [ "$TRUST_ROCALUTION_COMMIT" != "" ]
then
   commit=$TRUST_ROCALUTION_COMMIT
   git clone https://github.com/ROCmSoftwarePlatform/rocALUTION.git
   cd rocALUTION && git checkout $commit && cd -
   PACKAGE=$TRUST_ROOT/externalpackages/rocALUTION/rocALUTION-$commit.tar.gz
   tar cfz $PACKAGE --exclude .git rocALUTION && echo "Creation du package $PACKAGE"
else
   commit=eedff42d4 # Contrat de progres CINES
   commit=985838b4e # Pour beneficier de GlobalMatrix operationnel en sequentiel
   commit=f72a3919b52b64 # Mise a jour
   #commit=rocm-6.0.0 # Rocm 6.0 a tester plus tard (pbs?)
   tar xfz $TRUST_ROOT/externalpackages/rocALUTION/rocALUTION-$commit.tar.gz
fi
cd rocALUTION

# Hack pour eviter que rocALUTION ne telecharge un zip si pas de ROCM (Voir fichier cmake/Dependencies.cmake)
if [ "$ROCM_PATH" = "" ]
then
   unzip $TRUST_ROOT/externalpackages/rocALUTION/rocm-cmake-master.zip
   cd rocm-cmake-master 
   cmake -DCMAKE_INSTALL_PREFIX=`pwd`/../rocm-cmake .
   cd ..
   cmake --build rocm-cmake-master --target install
   export ROCM_DIR=`pwd`/rocm-cmake
   # Pour checker que le hack fonctionne:
   sed -i "1,$ s?https://github.com/RadeonOpenCompute/rocm-cmake/archive/??" cmake/Dependencies.cmake || exit -1
   # Pour desactiver la recherche de git:
   sed -i "s?find_package(Git REQUIRED)?#find_package(Git REQUIRED)?" cmake/Dependencies.cmake || exit -1
fi

# Build sans OpenMP et avec backend host si rocm pas installe:
SUPPORT_HIP=ON && [ "$TRUST_USE_ROCM" != 1 ]   && SUPPORT_HIP=OFF && echo "Warning, ROCm non installe donc pas de support GPU."
SUPPORT_MPI=ON && [ "$TRUST_DISABLE_MPI" = 1 ] && SUPPORT_MPI=OFF
# Optimisation possible sur GPU (page 73 de la doc rocALUTION). faster transfers over the PCI-Express and allows asynchronous data movement
sed -i "1,$ s?#ifdef ROCALUTION_HIP_PINNED_MEMORY?#ifndef ROCALUTION_HIP_PINNED_MEMORY?g" src/base/hip/hip_allocate_free.cpp || exit -1

# Hack bientot obsolete pour compiler avec rocm ancien (5.x) sur la branche develop recente:
# Voir: https://github.com/ROCmSoftwarePlatform/rocALUTION/issues/180
if [ "$ROCM_PATH" = /opt/rocm-5.7.1 ]
then
   sed -i "1,$ s?nullptr,?/* nullptr, */?g" src/base/hip/hip_sparse.cpp || exit -1
   sed -i "1,$ s?PtrType?int32_t?g"         src/base/global_matrix.hpp  || exit -1
fi

rm -r -f build
mkdir -p build
cd build

# Gtest
[ -f /usr/include/gtest ] && BUILD_CLIENTS="-DBUILD_CLIENTS_SAMPLES=ON -DBUILD_CLIENTS_TESTS=ON -DBUILD_CLIENTS_BENCHMARKS=ON"

# rocALUTION se construit avec GNU/HP-CRAY/INTEL
export CXX=$TRUST_CC_BASE && [ "$TRUST_CC_BASE_EXTP" != "" ] && CXX=$TRUST_CC_BASE_EXTP

# Valgrind: Disable avx512 instructions cause valgrind don't support yet
export CXXFLAGS="-mno-avx512f" && [ "`$CXX $CXXFLAGS 2>&1 | grep -i unrecognized`" != "" ] && export CXXFLAGS=""
export CXXFLAGS=$CXXFLAGS" -fPIC"
# Shared libraries
SL=OFF && [ "$TRUST_USE_ROCM" = 1 ] && SL=ON # Probleme au link avec rocm en lib statique
# Targets
TARGETS="" && [ "$ROCM_ARCH" != "" ] && TARGETS="-DAMDGPU_TARGETS=$ROCM_ARCH"

cmake .. $BUILD_CLIENTS $TARGETS -DSUPPORT_HIP=$SUPPORT_HIP -DROCM_PATH=$ROCM_PATH -DSUPPORT_OMP=OFF -DSUPPORT_MPI=$SUPPORT_MPI -DCMAKE_INSTALL_PREFIX=$TRUST_ROCALUTION -DBUILD_SHARED_LIBS=$SL || exit -1

$TRUST_MAKE

# Install et copie des samples
make install || exit -1
cp -r clients $TRUST_ROCALUTION/clients

# Lancement du benchmark rocALUTION sur une petite matrice type de TRUST
cd $TRUST_ROCALUTION/clients/staging
gunzip -c $TRUST_ROOT/ThirdPart/src/LIBROCALUTION/VDF_10x10x10.mtx.gz > VDF_10x10x10.mtx
gunzip -c $TRUST_ROOT/ThirdPart/src/LIBROCALUTION/gr_30_30.mtx.gz > gr_30_30.mtx # Matrix for support
./benchmark VDF_10x10x10.mtx 2>&1 | tee benchmark.log
echo "`pwd`/benchmark.log created."

# Nettoyage
rm -r -f $TRUST_ROOT/ThirdPart/src/LIBROCALUTION/rocALUTION

# Creation de l'include:
echo "#if defined(_COMPILE_AVEC_GCC_)
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored \"-Woverloaded-virtual\"
#include <rocalution.hpp>
#pragma GCC diagnostic pop
#elif defined(_COMPILE_AVEC_PGCC)
#pragma diag_suppress 612
#include <rocalution.hpp>
#else
#include <rocalution.hpp>
#endif
#ifdef ROCALUTION_ROCALUTION_HPP_
using namespace rocalution;
#endif" > $TRUST_ROCALUTION/include/rocalution_for_kernel.h

# Changement de la structure de rocALUTION:
cd $TRUST_ROCALUTION/include
if [ ! -f rocalution.hpp ]
then
   for item in rocalution/rocalution.hpp rocalution/version.hpp rocalution/base rocalution/solvers rocalution/utils
   do
      ln -s -f $item .
   done
fi
exit 0


